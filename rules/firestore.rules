rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function indexIsFree(username) {
      return !exists(/databases/$(database)/documents/index/user/username/$(username))
    }

    function allowedFollwersUsersFields(allowedFields) {
        return request.resource.data.diff(resource.data).affectedKeys().hasOnly(allowedFields)
      }


    match /users/{user} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == user;
      allow update: if request.auth.uid == user;

      match /followersCounter/{counter} {
        allow read, create, update: if request.auth != null;
        allow delete: if false;
      }

    }

    match /index/user/username/{username} {
      allow read: if request.auth != null;
      allow create: if indexIsFree(username) && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId;
    }

    match /recipes/{recipe} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId;
      allow delete: if request.auth.uid == resource.data.userId;

      match /comments/{comment} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow update: if request.auth.uid == resource.data.userId;
        allow delete: if request.auth.uid == resource.data.userId ||
          get(/databases/$(database)/documents/recipes/$(recipe)).data.userId == request.auth.uid
      }
    }

    match /recipeLikes/{recipeLike} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId || allowedFollwersUsersFields(["users"]);
      allow delete: if request.auth.uid == resource.data.userId;
      allow write, read: if request.auth != null;
    }

    match /followers/{username} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if request.auth.uid == resource.data.userId || allowedFollwersUsersFields(["users"]);
      allow delete: if request.auth.uid == resource.data.userId;
    }

    match /activity/{activity} {
      allow read: if request.auth.uid == resource.data.affectedUserId;
      allow create: if request.auth.uid == request.resource.data.userId;
      allow update: if false;
      allow delete: if false;
    }
  }
}
